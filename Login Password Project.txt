//This program generates a random password that contains uppercase letters, lowercase letters, and special characters. The password changes every time the program is run. When the user tries to log in, they are prompted to enter the password. If the entered password matches the generated password, the login is successful; otherwise, it fails.

import java.util.Random;
import java.util.Scanner;

public class PasswordChecker {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Generate a random password
        String generatedPassword = generatePassword(12);
        System.out.println("Your generated password: " + generatedPassword);
        
        // User login
        System.out.print("Enter your password: ");
        String enteredPassword = scanner.nextLine();
        
        // Check if the entered password matches the generated password
        if (checkPassword(generatedPassword, enteredPassword)) {
            System.out.println("Login successful!");
        } else {
            System.out.println("Invalid password. Login failed!");
        }
        
        scanner.close();
    }
    
    // Method to generate a random password
    private static String generatePassword(int length) {
        String uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String lowercase = "abcdefghijklmnopqrstuvwxyz";
        String specialCharacters = "!@#$%^&*()_+{}:\"<>?-=[];',.";
        String allCharacters = uppercase + lowercase + specialCharacters;
        
        Random random = new Random();
        StringBuilder password = new StringBuilder();
        
        for (int i = 0; i < length; i++) {
            int randomIndex = random.nextInt(allCharacters.length());
            password.append(allCharacters.charAt(randomIndex));
        }
        
        return password.toString();
    }
    
    // Method to check if entered password matches the generated password
    private static boolean checkPassword(String generatedPassword, String enteredPassword) {
        return generatedPassword.equals(enteredPassword);
    }
}